USE DATABASE TRUCK_WARRANTY_WORKSHOP;
USE SCHEMA ANALYTICS;

LIST @DOCUMENTS;

-- Extract text from all PDF documents
CREATE OR REPLACE TABLE RAW_TEXT AS
SELECT 
    RELATIVE_PATH,
    CASE 
        WHEN RELATIVE_PATH LIKE '%WARRANTY_POLICY%' THEN 'WARRANTY_POLICY'
        ELSE 'SERVICE_GUIDE'
    END AS DOCUMENT_TYPE,
    CASE 
        WHEN RELATIVE_PATH LIKE '%WARRANTY_POLICY%' THEN 'Warranty Policy'
        ELSE REPLACE(REPLACE(RELATIVE_PATH, '_Service_Guide.pdf', ''), 'MODEL-', 'Model ') || ' Service Guide'
    END AS DOCUMENT_TITLE,
    CASE 
        WHEN RELATIVE_PATH LIKE '%T2000%' THEN 'T2000'
        WHEN RELATIVE_PATH LIKE '%T4000%' THEN 'T4000'
        WHEN RELATIVE_PATH LIKE '%T6000%' THEN 'T6000'
        WHEN RELATIVE_PATH LIKE '%T8000%' THEN 'T8000'
        WHEN RELATIVE_PATH LIKE '%T9000%' THEN 'T9000'
        ELSE NULL
    END AS MODEL_NUMBER,
    TO_VARCHAR(
        SNOWFLAKE.CORTEX.PARSE_DOCUMENT(
            '@TRUCK_WARRANTY_WORKSHOP.ANALYTICS.DOCUMENTS',
            RELATIVE_PATH,
            {'mode': 'LAYOUT'}
        ):content
    ) AS EXTRACTED_TEXT
FROM DIRECTORY(@TRUCK_WARRANTY_WORKSHOP.ANALYTICS.DOCUMENTS)
WHERE RELATIVE_PATH LIKE '%.pdf';

SELECT 
    DOCUMENT_TYPE,
    DOCUMENT_TITLE,
    MODEL_NUMBER,
    LENGTH(EXTRACTED_TEXT) as text_length
FROM RAW_TEXT
ORDER BY DOCUMENT_TYPE, MODEL_NUMBER;

CREATE OR REPLACE TABLE CHUNKED_TEXT AS
SELECT
    RELATIVE_PATH,
    DOCUMENT_TYPE,
    DOCUMENT_TITLE,
    MODEL_NUMBER,
    c.INDEX::INTEGER AS CHUNK_INDEX,
    c.VALUE::TEXT AS CHUNK_TEXT
FROM RAW_TEXT,
LATERAL FLATTEN(
    input => SNOWFLAKE.CORTEX.SPLIT_TEXT_RECURSIVE_CHARACTER(
        EXTRACTED_TEXT,
        'markdown',
        1500,  -- chunk size
        200    -- overlap for context
    )
) c;

SELECT 
    DOCUMENT_TYPE,
    DOCUMENT_TITLE,
    COUNT(*) as chunk_count,
    MIN(LENGTH(CHUNK_TEXT)) as min_length,
    MAX(LENGTH(CHUNK_TEXT)) as max_length
FROM CHUNKED_TEXT
GROUP BY DOCUMENT_TYPE, DOCUMENT_TITLE
ORDER BY DOCUMENT_TYPE, DOCUMENT_TITLE;

SELECT 
    DOCUMENT_TITLE,
    CHUNK_INDEX,
    SUBSTRING(CHUNK_TEXT, 1, 200) as preview
FROM CHUNKED_TEXT
WHERE DOCUMENT_TYPE = 'SERVICE_GUIDE'
  AND CHUNK_TEXT LIKE '%P0420%'
LIMIT 5;

CREATE OR REPLACE CORTEX SEARCH SERVICE DOCUMENTATION_SEARCH
ON CHUNK_TEXT
ATTRIBUTES RELATIVE_PATH, DOCUMENT_TYPE, DOCUMENT_TITLE, CHUNK_INDEX, MODEL_NUMBER
WAREHOUSE = COMPUTE_WH
TARGET_LAG = '1 hour'
AS (
    SELECT
        CHUNK_TEXT,
        RELATIVE_PATH,
        DOCUMENT_TYPE,
        DOCUMENT_TITLE,
        CHUNK_INDEX,
        MODEL_NUMBER
    FROM CHUNKED_TEXT
);

-- Test 1: Search for P0420 diagnostic procedure
SELECT PARSE_JSON(
    SNOWFLAKE.CORTEX.SEARCH_PREVIEW(
        'TRUCK_WARRANTY_WORKSHOP.ANALYTICS.DOCUMENTATION_SEARCH',
        '{
            "query": "P0420 diagnostic procedure oxygen sensor test",
            "columns": ["chunk_text", "document_title", "model_number"],
            "limit": 3
        }'
    )
)['results'] as results;
